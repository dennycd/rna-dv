/********************************************************************************************
*  RNA-DV Version 1.0
*  Copyright (c)  2008 September  Denny Chen Dai, Herbert H. Tsang.
*  Permission is granted to copy, distribute and/or modify this document
*  under the terms of the GNU Free Documentation License, Version 1.2
*  or any later version published by the Free Software Foundation;
*  with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
*  Texts.  A copy of the license is included in the section entitled "GNU
*  Free Documentation License".
*********************************************************************************************/


package rnadv;

import java.awt.Dimension;
import java.io.File;
import javax.swing.JApplet;
import javax.swing.JOptionPane;

/**
 *
 * @author  cda18
 */
public class InstallationFrame extends javax.swing.JFrame implements Runnable{
    
    JApplet mainApplet = null;
    TestJFrame mainRef = null;
    private static String RNALIB = "RnaDVLib";
    private static String JARURL = "http://www.sfu.ca/~htsang/rna/lib/energy.jar";
    
            
    public void setMainFrame(TestJFrame tf){
        mainRef = tf;
    }
    
    public void setAppletPane(JApplet jp){
        mainApplet = jp;
    }
    

    /** Creates new form InstallationFrame */
    public InstallationFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Lstatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(Lstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(Lstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InstallationFrame().setVisible(true);
            }
        });
    }
    
    public void setVisible(boolean b) {
        /*user screen size*/
        Dimension ss = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        /*self size*/
        Dimension selfs = this.getSize();
        super.setLocation( ss.width/2 - selfs.width/2, ss.height/2 - selfs.height/2);
        super.setVisible(b);
    }

    /*the actuall installation process*/
    public void run() {
        
       
        boolean restart = false;
       
        File lib = new File(RNALIB);
        if(!lib.exists())
            lib.mkdir();
        
        
        /*energy binary fold exist- otherwise download it*/
        JarUpdate ju = new JarUpdate();
        if(!((new File(RNALIB + File.separator + "vienna")).exists() &&
                (new File(RNALIB + File.separator +"hotknot")).exists() &&
                (new File(RNALIB + File.separator +"unafold")).exists() &&
                (new File(RNALIB + File.separator +"TG.xml")).exists() ))      
        {
            Lstatus.setText("Downloading energy binary library....");
            //System.out.println("Downloading energy binary library....");
            ju.executeRemote(JARURL,
                  "energy.jar",
                  RNALIB,
                  true);
            
            restart = true;
        }
        
        /*jar library exist */
        if(!(new File("lib")).exists()){
            
            Lstatus.setText("Downloading java library....");

            ju.downloadJarLibrary("BrowserLauncher.jar", ".",true);
            ju.downloadJarLibrary("rnaml.jar",".",true);
            ju.downloadJarLibrary("commons-net-1.4.1.jar",".",true);
            ju.downloadJarLibrary("j2ee.jar",".",true);
            ju.downloadJarLibrary("nanoxml-2.1.1.jar",".",true);
            restart = true;
        }
         
        /*check sample CT files*/
        if(!(new File(RNALIB + File.separator + "ct")).exists()){

        //    int result = JOptionPane.showConfirmDialog(null, 
        //            "Download sample structure files ?",
        //            "Message",
        //            JOptionPane.YES_NO_OPTION);

        //    if(result == JOptionPane.YES_OPTION){
                
                Lstatus.setText("Downloading sample structure files....");
                
                ju.downloadCTSample("DC0262.ct",RNALIB);
                ju.downloadCTSample("G.stearothermophilus_AJ251080.ct",RNALIB);
                ju.downloadCTSample("H.marismortui.ct",RNALIB);
               ju.downloadCTSample("PSTVd_RNA.ct",RNALIB);                  
                ju.downloadCTSample("PDB_00722.rnaml",RNALIB);
                ju.downloadCTSample("PDB_00701.dp",RNALIB);
                
                restart = true;
         //   }   
        }
        
        /*require to restart*/
        if(restart ){
  
            if(!appletCheck(false)){
                JOptionPane.showMessageDialog(null, "Download complete, Please restart.");
                System.exit(0);
            }
            else{
                System.out.println("RNA-DV reloading....");
                this.mainApplet.getAppletContext().showDocument(this.mainApplet.getDocumentBase());        
            }
            
        }
        else
        {
            
            Lstatus.setText("Initializing main GUI...");
            if(mainRef==null)
                mainRef = new TestJFrame();
            
            mainRef.setTitle("RNA-DV");    
            
            if(appletCheck(false) && this.mainApplet!=null)
                this.mainApplet.setContentPane(mainRef.getContentPane());
            else{
                this.setVisible(false);
                mainRef.setVisible(true);  
            }
            
        }
        
    }
    
     
    private boolean appletCheck(boolean msg){
                      
        boolean isApplet;
        SecurityManager s = System.getSecurityManager();
        if(s != null){
            try{
                s.checkAccess(Thread.currentThread());
                isApplet = true;
                if(msg)
                    System.out.println("security check succeed....");
            }
            catch(SecurityException e ){
                isApplet = true;
                if(msg)
                    System.out.println("security check exception....");
            }
        }
        else{
            if(msg)
                System.out.println("security handler is null....");
            isApplet = false;
        }
      
        if(isApplet)
            if(msg)
                System.out.println("Running as web applet....");
        else
            if(msg)
                System.out.println("Running as standalone app....");
        
        return isApplet;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Lstatus;
    // End of variables declaration//GEN-END:variables

}
