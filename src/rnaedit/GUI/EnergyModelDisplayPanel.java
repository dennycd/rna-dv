/********************************************************************************************
*  RNA-DV Version 1.0
*  Copyright (c)  2008 September  Denny Chen Dai, Herbert H. Tsang.
*  Permission is granted to copy, distribute and/or modify this document
*  under the terms of the GNU Free Documentation License, Version 1.2
*  or any later version published by the Free Software Foundation;
*  with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
*  Texts.  A copy of the license is included in the section entitled "GNU
*  Free Documentation License".
*********************************************************************************************/

package rnaedit.GUI;

import rnaedit.thermo.*;
import com.touchgraph.linkbrowser.TGLinkBrowser;
import rnaedit.ct.CT;
import rnaedit.ct.writeCT;

/**
 *
 * @author  cda18
 */
public class EnergyModelDisplayPanel extends javax.swing.JPanel implements Runnable{

    
    private TGLinkBrowser tg = null; // the referenece to TG browser object
    
       
    /**
     * The run thread for this Model Panel 
     *
     */            
    public void run(){
        LMajor.setText("");
        LEFN.setText("");
        LHotKnot.setText("");
        Leval.setText("");
        
        System.out.println("Energy modifier listening....");
               
        while(true)
        {   
            /*sleep*/
            try {
                Thread.currentThread().sleep(1000);
            }catch (InterruptedException e) {
            }       
            /*check CT sturcture update*/
            if(tg.rna_ct != null){
                if(tg.rna_ct.updated == true){   
                    //update tmp CT file (according to Touchgraph changes)
                    (new writeCT()).write(tg.rna_ct, tg.rna_ct.ct_file);
                    //update Thermo value
                    this.updateThermo(tg.rna_ct);
                }
            }
        }
    }
         
    /**
     * initialization of the thermomodel panel 
     * 
     * Must pass the CT object to this Model Panel so that it updates accordingly
     * 
     */
    public void SetTouchGraph(TGLinkBrowser src) {
        this.tg = src; //pass in the reference to the TGLinkBrowser    
    }
    
    
    /** Creates new form EnergyModelDisplayPanel */
    public EnergyModelDisplayPanel() {
        initComponents();
    }
    
      
    /**
     * Once CT stucture is changed, recompute the thermodynamic model 
     * 
     * @rna The CT structure that has been updated 
     */
    private void updateThermo(CT rna_ct){
        System.out.println("updating thermo energy...");
       
        LMajor.setText( String.valueOf((new Major()).fitness(rna_ct))) ;
        Leval.setText((new RNAeval()).fitness(rna_ct));
        LEFN.setText((new Efn()).fitness(rna_ct));
        LHotKnot.setText((new HotKnots()).fitness(rna_ct));
        
        
        rna_ct.updated = false; //reset the update flag
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        LMajor = new javax.swing.JLabel();
        LEFN = new javax.swing.JLabel();
        LHotKnot = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Leval = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Energy(kal/mol)"));

        jLabel1.setText("Major");

        jLabel2.setText("EFN");

        jLabel3.setText("HotKnot");

        LMajor.setText("jLabel4");

        LEFN.setText("jLabel5");

        LHotKnot.setText("jLabel6");

        jLabel4.setText("RNAeval");

        Leval.setText("jLabel5");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Leval)
                    .addComponent(LHotKnot)
                    .addComponent(LEFN)
                    .addComponent(LMajor))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(LMajor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(LEFN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(LHotKnot))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Leval)
                    .addComponent(jLabel4))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LEFN;
    private javax.swing.JLabel LHotKnot;
    private javax.swing.JLabel LMajor;
    private javax.swing.JLabel Leval;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

}
